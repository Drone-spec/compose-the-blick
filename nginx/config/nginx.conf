user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
        include /etc/nginx/mime.types;

        server {
                listen 80;

                server_name _;
                return 301 https://$host$request_uri;
        }
        server {
                listen 443 ssl;

                ssl_certificate /etc/nginx/ccerts/cert.pem;
                ssl_certificate_key /etc/nginx/ccerts/key.pem;

                # Improve HTTPS performance with session resumption
                ssl_session_cache shared:SSL:10m;
                ssl_session_timeout 10m;

                # Enable server-side protection against BEAST attacks
                ssl_protocols TLSv1.2;
                ssl_prefer_server_ciphers on;
                ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";
                        
                # RFC-7919 recommended: https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096
                ssl_dhparam /etc/nginx/ccerts/dhparam.pem;
                ssl_ecdh_curve auto;

                # Aditional Security Headers
                # ref: https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
                add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

                # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
                add_header X-Frame-Options DENY always;

                # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
                add_header X-Content-Type-Options nosniff always;

                # ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
                add_header X-Xss-Protection "1; mode=block" always;
                # Enable OCSP stapling 
                # ref. http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox
                ssl_stapling on;
                ssl_stapling_verify on;
                #https://developers.cloudflare.com/ssl/origin-configuration/origin-ca/#cloudflare-origin-ca-root-certificate
                ssl_trusted_certificate /etc/nginx/ccerts/origin_ca_rsa_root.pem;

                # Force cloudflare
                # https://developers.cloudflare.com/ssl/origin-configuration/authenticated-origin-pull/set-up/zone-level/
                ssl_client_certificate /etc/nginx/ccerts/authenticated_origin_pull_ca.pem;
                ssl_verify_client on;
                
                # Root location
                location / {
                        return 301 https://$host/realms/external/account;
                }

                # Recommended exposed paths for keycloak
                location ~ ^/(resources/|js/|realms/external/|realms/public/) {
                        proxy_busy_buffers_size 512k;
                        proxy_buffers 4 512k;
                        proxy_buffer_size 256k;
                        add_header X-Forwarded-For $proxy_protocol_addr;
                        add_header X-Forwarded-Proto $scheme;
                        add_header X-Forwarded-Host $host;
                        proxy_set_header Host $host;

                            # FUCKING STUPID ASS KEYCLOAK "text/html" ON CSS FILESSSSSSS
                            location ~ \.css$
                            {
                                add_header Content-Type "text/css" always;
                                proxy_pass http://keycloak:8080;
                            }

                        proxy_pass http://keycloak:8080;
                }
        }
}
